server:
  port: 8886
  tomcat:
    max-threads: 300
    min-spare-threads: 0
    max-connections: 200
    uri-encoding: UTF-8
logging:
  pattern:
    console: "%d - %msg%n"
spring:
  application:
    name: user
  jpa:
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
  shardingsphere:
    datasource:
      names: master
      master:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/user?useSSL=false&useUnicode=true&characterEncoding=utf8
        username: root
        password: root
    sharding:
      tables:
        user:
          actual-data-nodes: master.user_$->{0..9}
          table-strategy:
            inline:
              sharding-column: user_id
              algorithm-expression: user_$->{user_id % 10}
    props:
      sql:
        show: true
  cache:
    type: redis
    redis:
      key-prefix: cache
      cache-null-values: true
  aop:
    auto: true
  cloud:
    loadbalancer:
      ribbon:
        enabled: true
    discovery:
      client:
        health-indicator:
          enabled: false
  rabbitmq:
    host: localhost
    username: fanhehe
    password: 13889441200
    virtual-host: /fanhehe
    port: 5672
  redis:
    cluster:
      nodes: 127.0.0.1:6379,127.0.0.1:6380,127.0.0.1:6381,127.0.0.1:6382,127.0.0.1:6383,127.0.0.1:6384
      max-redirects: 3
    port: 6579
    host: 127.0.0.1
    database: 0
    password:
eureka:
  instance:
    instance-id: user
    hostname: localhost
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 3
    lease-expiration-duration-in-seconds: 3
  client:
    fetchRegistry: true
    registerWithEureka: true
    healthcheck:
      enabled: false
    serviceUrl:
      defaultZone: http://localhost:9999/eureka/
feign:
  hystrix:
    enabled: true
  okhttp:
    enabled: true
  httpclient:
    enabled: false
  compression:
    request:
      enabled: true
    response:
      enabled: true
ribbon:
  eureka:
    enabled: true
  okhttp:
    enabled: false
  http:
    client:
      enabled: false
user:
  ribbon:
    ConnectTimeout: 500 #请求连接超时时间
    ReadTimeout: 1000 #请求处理的超时时间
    OkToRetryOnAllOperations: true #对所有请求都进行重试
    MaxAutoRetriesNextServer: 2 #切换实例的重试次数
    MaxAutoRetries: 1 #对当前实例的重试次数
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule #随机
    # NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule #轮询
    # NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RetryRule #重试
    # NFLoadBalancerRuleClassName: com.netflix.loadbalancer.WeightedResponseTimeRule #响应时间权重
    # NFLoadBalancerRuleClassName: com.netflix.loadbalancer.BestAvailableRule #最空闲连接策略
